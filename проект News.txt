1.Создать двух пользователей (с помощью метода User.objects.create_user('username')):
>>> u1 = User.objects.create_user(username = 'Ivan')
>>> u1 
<User: Ivan>
>>> u2 = User.objects.create_user(username = 'Peter')
2. Создать два объекта модели Author, связанные с пользователями:
>>> Author.objects.create(authorUser=u1)
<Author: Author object (1)>
>>> Author.objects.create(authorUser=u2) 
<Author: Author object (2)>
3. Добавить 4 категории в модель Category:
>>> Category.objects.create(name = 'IT')
<Category: Category object (1)>
>>> Category.objects.create(name = 'povest')
<Category: Category object (2)>
>>> Category.objects.create(name = 'detektiv')
<Category: Category object (3)>
>>> Category.objects.create(name = 'stixi')
<Category: Category object (4)>
4. Добавить 2 статьи и 1 новость:
 author = Author.objects.get(id=1)
>>> author
<Author: Author object (1)>
>>> Post.objects.create(author=author, categoryType='NW', title='sometitle', text='somebigtext')
<Post: Post object (1)>
>>> author = Author.objects.get(id=2) 
>>> Post.objects.create(author=author, categoryType='AR', title='sometitle', text='somebigtext') 
<Post: Post object (2)>
>>> Post.objects.create(author=author, categoryType='AR', title='sometitle', text='somebigtext')
<Post: Post object (3)>
5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий):
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1)) 
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1))
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=2)) 
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=2)) 
6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий):
7. Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов:
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).rating
>>> Comment.objects.get(id=2).like()
>>> Comment.objects.get(id=2).like()
>>> Comment.objects.get(id=2).rating
>>> Comment.objects.get(id=3).like()
>>> Comment.objects.get(id=3).like()
>>> Comment.objects.get(id=3).like()
>>> Comment.objects.get(id=3).rating
>>> Comment.objects.get(id=4).dislike()
>>> Comment.objects.get(id=4).rating
8. Обновить рейтинги пользователей:
>>> Author.objects.get(id=1):
<Author: Author objects(1)>
>>> a= Author.objects.get(id=1)
>>> a.update_rating()
>>> a.ratingAuthor
>>> Author.objects.get(id=2):
<Author: Author objects(2)>
>>> a= Author.objects.get(id=2)
>>> a.update_rating()
>>> a.ratingAuthor
9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта):
a = Author.objects.order_by('-ratingAuthor')[:1]
for i in a:
...   i.ratingAuthor
...   i.authoUser.username



